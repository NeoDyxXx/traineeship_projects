----------------EXERCISE 1.  SQL BASICS REVIEW, CUBE AND ROLLUP----------------
--1.1
SELECT EMPNO, LASTNAME, SALARY, WORKDEPT
FROM EMP
WHERE WORKDEPT IN ('D11','D21') AND SALARY BETWEEN 22000 AND 240000
;

--1.2
SELECT * FROM EMPLOYEE;
SELECT EDLEVEL, MIN(SALARY) AS MIN, MAX(SALARY) AS MAX, AVG(SALARY) AS AVG, COUNT(*) AS COUNT 
FROM EMPLOYEE
GROUP BY EDLEVEL;
-- TODO: ADD HAVING EDLEVEL = 16
-- без понятия почему не работает сравнение

--1.3
SELECT WORKDEPT, MIN(SALARY) AS MIN, MAX(SALARY) AS MAX, 
        AVG(SALARY) AS AVG, COUNT(*) AS COUNT
FROM EMPLOYEE
GROUP BY WORKDEPT
HAVING COUNT > 5;

--1.4
SELECT WORKDEPT, SEX, MIN(SALARY) AS MIN, MAX(SALARY) AS MAX, SUM(SALARY) AS SUM
FROM EMPLOYEE
GROUP BY WORKDEPT, GROUPING SETS (WORKDEPT, SEX)
HAVING WORKDEPT LIKE 'D%'

--1.5
SELECT WORKDEPT, AVG(SALARY) AS AVG_TOTAL_SALARY, 
RANK() OVER(ORDER BY AVG(SALARY + BONUS) DESC) AS RANK_AVG_SAL
FROM EMPLOYEE
GROUP BY WORKDEPT
ORDER BY RANK_AVG_SAL;
----------------EXERCISE 2.  CREATE OBJECTS----------------
--2.1
CREATE TABLE EMPDEPT
(
EMPNO CHARACTER(6) NOT NULL,
LASTNAME VARCHAR(15) NOT NULL,
SALARY DECIMAL(9,2),
DEPTNO CHARACTER(3) NOT NULL,
"DEP NAME" VARCHAR(36)
);

ALTER TABLE EMPDEPT ADD CONSTRAINT CHECK_SALARY1
CHECK(DEPTNO = 'E11' AND SALARY < 50000)

ALTER TABLE EMPDEPT DROP CONSTRAINT CHECK_SALARY1;

ALTER TABLE EMPDEPT DROP CONSTRAINT CHECK_SALARY2;
ALTER TABLE EMPDEPT ADD CONSTRAINT CHECK_SALARY2
CHECK(SALARY < 100000)

CREATE TABLE HIGH_SALARY_RAISE
(
EMPNO CHARACTER(6) NOT NULL,
PREV_SAL DECIMAL(9,2) NOT NULL,
NEW_SAL DECIMAL(9,2) NOT NULL
)
--2.2
ALTER TABLE EMPDEPT ADD PRIMARY KEY(EMPNO);

ALTER TABLE EMPDEPT ADD FOREIGN KEY EMPDEPT(EMPNO)
REFERENCES EMPLOYEE(EMPNO);

ALTER TABLE EMPDEPT ADD CONSTRAINT FK_DEPTNO FOREIGN KEY EMPDEPT(DEPTNO)
REFERENCES DEPARTMENT(DEPTNO);

--2.3
INSERT INTO EMPDEPT(EMPNO, LASTNAME, SALARY, DEPTNO, DEPTNAME)
SELECT EMPNO, LASTNAME, SALARY, DEPTNO, DEPTNAME
FROM EMPLOYEE INNER JOIN DEPARTMENT 
ON EMPLOYEE.WORKDEPT = DEPARTMENT.DEPTNO
WHERE SALARY < 50000;

SELECT EMPNO, LASTNAME, SALARY, DEPTNO, DEPTNAME
FROM EMPLOYEE INNER JOIN DEPARTMENT 
ON EMPLOYEE.WORKDEPT = DEPARTMENT.DEPTNO
WHERE SALARY < 50000;


--2.4


--2.5


--2.6


--2.7


--2.8


--2.9


----------------EXERCISE 3. JOINS----------------
--3.1
SELECT WORKDEPT, EMPNO, LASTNAME FROM 

--3.2
SELECT WORKDEPT, EMPNO, LASTNAME FROM VEMPDPT1
ORDER BY EMPNO;

--3.3
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME 
FROM VPROJ INNER JOIN VDEPT ON VDEPT.DEPTNO = VPROJ.DEPTNO
INNER JOIN VEMPDPT1 ON VDEPT.DEPTNO = VEMPDPT1.DEPTNO
ORDER BY PROJNAME, EMPNO;

--3.4
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME 
FROM VPROJ RIGHT OUTER JOIN VDEPT ON VDEPT.DEPTNO = VPROJ.DEPTNO
INNER JOIN VEMPDPT1 ON VDEPT.DEPTNO = VEMPDPT1.DEPTNO
ORDER BY PROJNAME, EMPNO;

--3.5
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME 
FROM VPROJ INNER JOIN VDEPT ON VDEPT.DEPTNO = VPROJ.DEPTNO
LEFT OUTER JOIN VEMPDPT1 ON VDEPT.DEPTNO = VEMPDPT1.DEPTNO
ORDER BY PROJNAME, EMPNO;

--3.6
SELECT EMPNO, LASTNAME, WORKDEPT, PROJNAME 
FROM VPROJ INNER JOIN VDEPT ON VDEPT.DEPTNO = VPROJ.DEPTNO
FULL OUTER JOIN VEMPDPT1 ON VDEPT.DEPTNO = VEMPDPT1.DEPTNO
ORDER BY PROJNAME, EMPNO;

----------------EXERCISE 4. CASE AND CAST----------------
--4.1
SELECT 
EMPNO, 
FIRSTNME, 
LASTNAME,
CASE
        WHEN SALARY < 50000 THEN 'LOW'
        WHEN SALARY >= 50000 AND SALARY < 75000 THEN 'NORMAL'
        WHEN SALARY >= 75000 THEN 'HIGH'
END AS INCOME
FROM EMPLOYEE
WHERE WORKDEPT = 'D11';

SELECT * FROM EMPLOYEE

--4.2
SELECT LASTNAME, SALARY, SALARY - 30000 AS DIFFERENCE
FROM EMPLOYEE
WHERE WORKDEPT = 'D11'
ORDER BY DIFFERENCE;

--4.3
SELECT WORKDEPT,  'PERCENTAGE BONUS'

--4.4


----------------EXERCISE 5. SUBQUERIES----------------
--5.1


--5.2
SELECT EMPNO, SALARY, WORKDEPT FROM EMPLOYEE AS E1
WHERE E1.SALARY > (SELECT AVG(SALARY) FROM EMPLOYEE AS E2
WHERE E1.WORKDEPT = E2.WORKDEPT)
ORDER BY WORKDEPT, EMPNO;

--5.3


--5.4


--5.5


--5.6


--5.7


----------------EXERCISE 6. SCALAR FUNCTIONS----------------
--6.1
SELECT EMPNO, LASTNAME, substring(LASTNAME, length(LASTNAME)) as LASTCHAR 
from EMPLOYEE;

--6.2


--6.3


--6.4


--6.5


--6.6


--6.7


--6.8


--6.9


--6.10

